//==================================================================================================
// 
// Generated Map Script
// 
// Name:   Cat 'N Mouse Red Sea
// 
//==================================================================================================
include "TriggerLibs/NativeLib"

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
void InitLibs () {
    libNtve_InitLib();
}

//--------------------------------------------------------------------------------------------------
// Global Variables
//--------------------------------------------------------------------------------------------------
int[12] gv_PlayerStatus;
int gv_CatNumber;
int gv_MouseNumber;
int gv_GameTime;
int gv_IncomeTime;
int gv_Income;
playergroup gv_CatGroup;
playergroup gv_MiceGroup;
unitgroup gv_CivilianGroup;

void InitGlobals () {
    gv_Income = 2;
    gv_CatGroup = PlayerGroupEmpty();
    gv_MiceGroup = PlayerGroupEmpty();
    gv_CivilianGroup = UnitGroupEmpty();
}

//--------------------------------------------------------------------------------------------------
// Trigger Variables
//--------------------------------------------------------------------------------------------------
trigger gt_MapInitialization;
trigger gt_SelectionTimer;
trigger gt_PlayerChooseCat;
trigger gt_PlayerChooseMouse;
trigger gt_ReleaseCats;
trigger gt_UnitKilled;
trigger gt_RescueMouse;
trigger gt_MouseBuilt;
trigger gt_CatBuilt;
trigger gt_CatIncome;
trigger gt_SelectionChecking;
trigger gt_InGameChecking;
trigger gt_WestToEast;
trigger gt_EastToWest;
trigger gt_NorthToSouth;
trigger gt_SouthToNorth;

//--------------------------------------------------------------------------------------------------
// Trigger: Untitled Trigger 001
//--------------------------------------------------------------------------------------------------
bool gt_MapInitialization_Func (bool testConds, bool runActions) {
    playergroup auto00989FB5_g;
    int auto00989FB5_p;

    // Variable Declarations
    int lv_Player;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    if (((PlayerGroupCount(PlayerGroupActive()) >= 2) && (PlayerGroupCount(PlayerGroupActive()) <= 4))) {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringExternal("Param/Value/E0B035BC"));
        gv_CatNumber = 1;
    }
    else if (((PlayerGroupCount(PlayerGroupActive()) >= 5) && (PlayerGroupCount(PlayerGroupActive()) <= 8))) {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringExternal("Param/Value/DB9C43A7"));
        gv_CatNumber = 2;
    }

    if ((gv_CatNumber == 0)) {
        VisRevealArea(1, RegionFromId(1), 0.0, false);
        PlayerSetRace(1, "Terr");
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringExternal("Param/Value/6A0F6FF3"));
        PlayerModifyPropertyInt(2, c_playerPropMinerals, c_playerPropOperAdd, 999999);
        PlayerModifyPropertyInt(3, c_playerPropMinerals, c_playerPropOperAdd, 999999);
        PlayerModifyPropertyInt(4, c_playerPropMinerals, c_playerPropOperAdd, 999999);
        PlayerModifyPropertyInt(5, c_playerPropMinerals, c_playerPropOperAdd, 999999);

        UnitKill(UnitFromId(96));
        UnitKill(UnitFromId(95));
        UnitKill(UnitFromId(2));
        UnitKill(UnitFromId(3));

        UnitKill(UnitFromId(699052006));
        UnitKill(UnitFromId(222));

        PlayerGroupAdd(gv_MiceGroup, 2);
        gv_PlayerStatus[2] = 1;
        UnitCreate(1, "Probe", 0, 2, PointFromId(14), 270.0);
        PlayerGroupAdd(gv_MiceGroup, 4);
        gv_PlayerStatus[4] = 1;
        UnitCreate(1, "Probe", 0, 4, PointFromId(14), 270.0);
        PlayerGroupAdd(gv_CatGroup, 3);
        gv_PlayerStatus[3] = 1;
        UnitCreate(1, "PrimalUltralisk", 0, 3, PointFromId(14), 270.0);
        PlayerGroupAdd(gv_CatGroup, 5);
        gv_PlayerStatus[5] = 1;
        UnitCreate(1, "PrimalUltralisk", 0, 5, PointFromId(14), 270.0);
        gv_CatNumber = 2;
        gv_MouseNumber = 2;
        libNtve_gf_SetAlliance(1, 2, libNtve_ge_AllianceSetting_AllyWithSharedVisionControlAndSpending);
        libNtve_gf_SetAlliance(1, 3, libNtve_ge_AllianceSetting_AllyWithSharedVisionControlAndSpending);
        libNtve_gf_SetAlliance(1, 4, libNtve_ge_AllianceSetting_AllyWithSharedVisionControlAndSpending);
        libNtve_gf_SetAlliance(1, 5, libNtve_ge_AllianceSetting_AllyWithSharedVisionControlAndSpending);
        libNtve_gf_SetAlliance(2, 3, libNtve_ge_AllianceSetting_AllyWithSharedVisionControlAndSpending);
        libNtve_gf_SetAlliance(2, 4, libNtve_ge_AllianceSetting_AllyWithSharedVisionControlAndSpending);
        libNtve_gf_SetAlliance(2, 5, libNtve_ge_AllianceSetting_AllyWithSharedVisionControlAndSpending);
        libNtve_gf_SetAlliance(3, 4, libNtve_ge_AllianceSetting_AllyWithSharedVisionControlAndSpending);
        libNtve_gf_SetAlliance(3, 5, libNtve_ge_AllianceSetting_AllyWithSharedVisionControlAndSpending);
        libNtve_gf_SetAlliance(4, 5, libNtve_ge_AllianceSetting_AllyWithSharedVisionControlAndSpending);

        TriggerEnable(gt_SelectionTimer, false);
        TriggerEnable(gt_PlayerChooseCat, false);
        TriggerEnable(gt_PlayerChooseMouse, false);
        TriggerEnable(gt_ReleaseCats, false);
        TriggerEnable(gt_MouseBuilt, true);
        TriggerEnable(gt_UnitKilled, true);
        TriggerEnable(gt_CatIncome, true);
        TriggerEnable(gt_RescueMouse, true);
        TriggerEnable(gt_SelectionChecking, false);

    }
    else {
        libNtve_gf_MakeUnitInvulnerable(UnitFromId(96), true);
        libNtve_gf_MakeUnitInvulnerable(UnitFromId(95), true);
        libNtve_gf_MakeUnitInvulnerable(UnitFromId(2), true);
        libNtve_gf_MakeUnitInvulnerable(UnitFromId(3), true);
        libNtve_gf_MakeUnitInvulnerable(UnitFromId(699052006), true);
        libNtve_gf_MakeUnitInvulnerable(UnitFromId(222), true);

        auto00989FB5_g = PlayerGroupActive(); 
        auto00989FB5_p = 1;
        for ( ; auto00989FB5_p <= PlayerGroupCount(auto00989FB5_g) ; auto00989FB5_p += BoolToInt(lv_Player == PlayerGroupPlayer(auto00989FB5_g, auto00989FB5_p)) ) {
            lv_Player = PlayerGroupPlayer(auto00989FB5_g, auto00989FB5_p);
            libNtve_gf_CreateUnitsAtPoint2(1, "Civilian", 0, lv_Player, PointFromId(14));
            libNtve_gf_MakeUnitInvulnerable(UnitLastCreated(), true);
            UnitGroupAdd(gv_CivilianGroup, UnitLastCreated());
            VisRevealArea(lv_Player, RegionFromId(1), 0.0, false);
        }

        UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringExternal("Param/Value/283D02CF"));

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MapInitialization_Init () {
    gt_MapInitialization = TriggerCreate("gt_MapInitialization_Func");
    TriggerAddEventMapInit(gt_MapInitialization);
}

//--------------------------------------------------------------------------------------------------
// Trigger: SelectionTimer
//--------------------------------------------------------------------------------------------------
bool gt_SelectionTimer_Func (bool testConds, bool runActions) {
    unitgroup auto82D28A90_g;
    int auto82D28A90_u;
    playergroup autoB3A24EC6_g;
    int autoB3A24EC6_p;
    playergroup auto0DFB7073_g;
    int auto0DFB7073_p;
    playergroup autoC2809EA9_g;
    int autoC2809EA9_p;
    playergroup auto0A00E88A_g;
    int auto0A00E88A_p;
    playergroup auto40545E18_g;
    int auto40545E18_p;
    playergroup autoD0A2DBBC_g;
    int autoD0A2DBBC_p;
    playergroup auto97715532_g;
    int auto97715532_p;
    int autoAC50CB8D_val;

    // Variable Declarations
    unit lv_Unit;
    int lv_Player;
    int lv_TargetPlayer;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    while ((PlayerGroupCount(gv_CatGroup) < gv_CatNumber)) {
        lv_Unit = UnitGroupRandomUnit(gv_CivilianGroup, c_unitCountAlive);
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, (StringExternal("Param/Value/A85E5EAB") + (PlayerName(UnitGetOwner(lv_Unit)) + StringExternal("Param/Value/7CC56B6B"))));
        PlayerGroupAdd(gv_CatGroup, UnitGetOwner(lv_Unit));
        PlayerSetRace(UnitGetOwner(lv_Unit), "Zerg");
        gv_PlayerStatus[UnitGetOwner(lv_Unit)] = 1;
        UnitKill(lv_Unit);
    }

    auto82D28A90_g = gv_CivilianGroup;
    auto82D28A90_u = 1;
    for ( ; auto82D28A90_u <= UnitGroupCount(auto82D28A90_g, c_unitCountAll) ; auto82D28A90_u += BoolToInt(lv_Unit == UnitGroupUnit(auto82D28A90_g, auto82D28A90_u)) ) {
        lv_Unit = UnitGroupUnit(auto82D28A90_g, auto82D28A90_u);
        if ((UnitIsAlive(lv_Unit) == true)) {
            PlayerGroupAdd(gv_MiceGroup, UnitGetOwner(lv_Unit));
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, (StringExternal("Param/Value/4052D9D2") + (PlayerName(UnitGetOwner(lv_Unit)) + StringExternal("Param/Value/FEB1380B"))));
            PlayerSetRace(UnitGetOwner(lv_Unit), "Prot");
            gv_PlayerStatus[UnitGetOwner(lv_Unit)] = 1;
            UnitKill(lv_Unit);
        }

    }

    UnitKill(UnitFromId(699052006));
    UnitKill(UnitFromId(222));

    autoB3A24EC6_g = gv_MiceGroup; 
    autoB3A24EC6_p = 1;
    for ( ; autoB3A24EC6_p <= PlayerGroupCount(autoB3A24EC6_g) ; autoB3A24EC6_p += BoolToInt(lv_Player == PlayerGroupPlayer(autoB3A24EC6_g, autoB3A24EC6_p)) ) {
        lv_Player = PlayerGroupPlayer(autoB3A24EC6_g, autoB3A24EC6_p);
        auto0DFB7073_g = gv_CatGroup; 
        auto0DFB7073_p = 1;
        for ( ; auto0DFB7073_p <= PlayerGroupCount(auto0DFB7073_g) ; auto0DFB7073_p += BoolToInt(lv_TargetPlayer == PlayerGroupPlayer(auto0DFB7073_g, auto0DFB7073_p)) ) {
            lv_TargetPlayer = PlayerGroupPlayer(auto0DFB7073_g, auto0DFB7073_p);
            libNtve_gf_SetAlliance(lv_Player, lv_TargetPlayer, libNtve_ge_AllianceSetting_Enemy);
            PlayerSetAlliance(lv_Player, c_allianceIdChat, lv_TargetPlayer, false);
            PlayerSetAlliance(lv_TargetPlayer, c_allianceIdChat, lv_Player, false);
        }
        autoC2809EA9_g = gv_MiceGroup; 
        autoC2809EA9_p = 1;
        for ( ; autoC2809EA9_p <= PlayerGroupCount(autoC2809EA9_g) ; autoC2809EA9_p += BoolToInt(lv_TargetPlayer == PlayerGroupPlayer(autoC2809EA9_g, autoC2809EA9_p)) ) {
            lv_TargetPlayer = PlayerGroupPlayer(autoC2809EA9_g, autoC2809EA9_p);
            libNtve_gf_SetAlliance(lv_Player, lv_TargetPlayer, libNtve_ge_AllianceSetting_AllyWithSharedVision);
            PlayerSetAlliance(lv_Player, c_allianceIdChat, lv_TargetPlayer, true);
        }
    }
    auto0A00E88A_g = gv_CatGroup; 
    auto0A00E88A_p = 1;
    for ( ; auto0A00E88A_p <= PlayerGroupCount(auto0A00E88A_g) ; auto0A00E88A_p += BoolToInt(lv_Player == PlayerGroupPlayer(auto0A00E88A_g, auto0A00E88A_p)) ) {
        lv_Player = PlayerGroupPlayer(auto0A00E88A_g, auto0A00E88A_p);
        auto40545E18_g = gv_CatGroup; 
        auto40545E18_p = 1;
        for ( ; auto40545E18_p <= PlayerGroupCount(auto40545E18_g) ; auto40545E18_p += BoolToInt(lv_TargetPlayer == PlayerGroupPlayer(auto40545E18_g, auto40545E18_p)) ) {
            lv_TargetPlayer = PlayerGroupPlayer(auto40545E18_g, auto40545E18_p);
            libNtve_gf_SetAlliance(lv_Player, lv_TargetPlayer, libNtve_ge_AllianceSetting_AllyWithSharedVision);
            PlayerSetAlliance(lv_Player, c_allianceIdChat, lv_TargetPlayer, true);
        }
    }

    autoD0A2DBBC_g = gv_CatGroup; 
    autoD0A2DBBC_p = 1;
    for ( ; autoD0A2DBBC_p <= PlayerGroupCount(autoD0A2DBBC_g) ; autoD0A2DBBC_p += BoolToInt(lv_Player == PlayerGroupPlayer(autoD0A2DBBC_g, autoD0A2DBBC_p)) ) {
        lv_Player = PlayerGroupPlayer(autoD0A2DBBC_g, autoD0A2DBBC_p);
        UnitCreate(1, "PrimalUltralisk", 0, lv_Player, PointFromId(14), 270.0);
    }

    gv_MouseNumber = PlayerGroupCount(gv_MiceGroup);
    lv_TargetPlayer = 1;
    auto97715532_g = gv_MiceGroup; 
    auto97715532_p = 1;
    for ( ; auto97715532_p <= PlayerGroupCount(auto97715532_g) ; auto97715532_p += BoolToInt(lv_Player == PlayerGroupPlayer(auto97715532_g, auto97715532_p)) ) {
        lv_Player = PlayerGroupPlayer(auto97715532_g, auto97715532_p);
        autoAC50CB8D_val = lv_TargetPlayer;
        if (autoAC50CB8D_val == 1) {
            UnitCreate(1, "Probe", 0, lv_Player, PointFromId(36960959), 270.0);
        }
        else if (autoAC50CB8D_val == 2) {
            UnitCreate(1, "Probe", 0, lv_Player, PointFromId(269031559), 270.0);
        }
        else if (autoAC50CB8D_val == 3) {
            UnitCreate(1, "Probe", 0, lv_Player, PointFromId(1718592165), 270.0);
        }
        else if (autoAC50CB8D_val == 4) {
            UnitCreate(1, "Probe", 0, lv_Player, PointFromId(1843341427), 270.0);
        }
        else if (autoAC50CB8D_val == 5) {
            UnitCreate(1, "Probe", 0, lv_Player, PointFromId(2065460992), 270.0);
        }
        else if (autoAC50CB8D_val == 6) {
            UnitCreate(1, "Probe", 0, lv_Player, PointFromId(196582456), 270.0);
        }
        else if (autoAC50CB8D_val == 7) {
            UnitCreate(1, "Probe", 0, lv_Player, PointFromId(808444617), 270.0);
        }
        else if (autoAC50CB8D_val == 8) {
            UnitCreate(1, "Probe", 0, lv_Player, PointFromId(935395526), 270.0);
        }
        else {
        }
        CameraLookAtUnit(lv_Player, UnitLastCreated());
        PlayerModifyPropertyInt(lv_Player, c_playerPropMinerals, c_playerPropOperAdd, 50);
        lv_TargetPlayer += 1;
    }

    TriggerEnable(gt_UnitKilled, true);
    TriggerEnable(gt_PlayerChooseCat, false);
    TriggerEnable(gt_PlayerChooseMouse, false);
    TriggerEnable(gt_RescueMouse, true);
    TriggerEnable(gt_CatIncome, true);
    TriggerEnable(gt_SelectionChecking, false);
    TriggerEnable(gt_InGameChecking, true);

    UIDisplayMessage(gv_CatGroup, c_messageAreaChat, StringExternal("Param/Value/302F78DE"));
    UIDisplayMessage(gv_MiceGroup, c_messageAreaChat, StringExternal("Param/Value/DB68FBC6"));

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SelectionTimer_Init () {
    gt_SelectionTimer = TriggerCreate("gt_SelectionTimer_Func");
    TriggerAddEventTimeElapsed(gt_SelectionTimer, 21.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: PLayerChooseCat
//--------------------------------------------------------------------------------------------------
bool gt_PlayerChooseCat_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnit()) == "Civilian"))) {
            return false;
        }

        if (!((PlayerGroupCount(gv_CatGroup) < gv_CatNumber))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, (StringExternal("Param/Value/9C62836F") + (PlayerName(UnitGetOwner(EventUnit())) + StringExternal("Param/Value/7C85EAF9"))));
    PlayerGroupAdd(gv_CatGroup, UnitGetOwner(EventUnit()));
    PlayerSetRace(UnitGetOwner(EventUnit()), "Zerg");
    gv_PlayerStatus[UnitGetOwner(EventUnit())] = 1;
    UnitKill(EventUnit());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_PlayerChooseCat_Init () {
    gt_PlayerChooseCat = TriggerCreate("gt_PlayerChooseCat_Func");
    TriggerAddEventUnitRange(gt_PlayerChooseCat, null, UnitFromId(699052006), 2.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: PlayerChooseMouse
//--------------------------------------------------------------------------------------------------
bool gt_PlayerChooseMouse_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnit()) == "Civilian"))) {
            return false;
        }

        if (!(((PlayerGroupCount(gv_CatGroup) + UnitGroupCount(gv_CivilianGroup, c_unitCountAlive)) > gv_CatNumber))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, (StringExternal("Param/Value/DD2F5E6E") + (PlayerName(UnitGetOwner(EventUnit())) + StringExternal("Param/Value/C86FD996"))));
    PlayerGroupAdd(gv_MiceGroup, UnitGetOwner(EventUnit()));
    PlayerSetRace(UnitGetOwner(EventUnit()), "Prot");
    gv_PlayerStatus[UnitGetOwner(EventUnit())] = 1;
    UnitKill(EventUnit());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_PlayerChooseMouse_Init () {
    gt_PlayerChooseMouse = TriggerCreate("gt_PlayerChooseMouse_Func");
    TriggerAddEventUnitRange(gt_PlayerChooseMouse, null, UnitFromId(222), 2.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Untitled Trigger 001
//--------------------------------------------------------------------------------------------------
bool gt_ReleaseCats_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringExternal("Param/Value/A856719D"));
    UnitKill(UnitFromId(96));
    UnitKill(UnitFromId(95));
    UnitKill(UnitFromId(2));
    UnitKill(UnitFromId(3));

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ReleaseCats_Init () {
    gt_ReleaseCats = TriggerCreate("gt_ReleaseCats_Func");
    TriggerAddEventTimeElapsed(gt_ReleaseCats, 36.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Untitled Trigger 001
//--------------------------------------------------------------------------------------------------
bool gt_UnitKilled_Func (bool testConds, bool runActions) {
    string auto41F11478_val;
    unitgroup auto53314B55_g;
    int auto53314B55_u;
    playergroup auto5F5D4917_g;
    int auto5F5D4917_p;
    playergroup auto0C395880_g;
    int auto0C395880_p;
    unitgroup auto8E0C2289_g;
    int auto8E0C2289_u;
    playergroup autoAFE175E3_g;
    int autoAFE175E3_p;
    playergroup autoA2BD9324_g;
    int autoA2BD9324_p;

    // Variable Declarations
    unit lv_Unit;
    int lv_PlayerIndex;

    // Variable Initialization
    lv_PlayerIndex = UnitGetOwner(EventUnit());

    // Actions
    if (!runActions) {
        return true;
    }

    auto41F11478_val = UnitGetType(EventUnit());
    if (auto41F11478_val == "PrimalUltralisk") {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, (StringExternal("Param/Value/C1189633") + (PlayerName(lv_PlayerIndex) + (StringExternal("Param/Value/46ED15EA") + (PlayerName(libNtve_gf_KillingPlayer()) + StringExternal("Param/Value/8437BB65"))))));
        gv_PlayerStatus[lv_PlayerIndex] -= 1;
        gv_CatNumber -= 1;
        if ((gv_PlayerStatus[lv_PlayerIndex] == 0)) {
            auto53314B55_g = UnitGroup(null, UnitGetOwner(EventUnit()), RegionEntireMap(), UnitFilter(0, 0, 0, 0), 0);
            auto53314B55_u = 1;
            for ( ; auto53314B55_u <= UnitGroupCount(auto53314B55_g, c_unitCountAll) ; auto53314B55_u += BoolToInt(lv_Unit == UnitGroupUnit(auto53314B55_g, auto53314B55_u)) ) {
                lv_Unit = UnitGroupUnit(auto53314B55_g, auto53314B55_u);
                UnitKill(lv_Unit);
            }
        }

        if ((gv_CatNumber == 0)) {
            auto5F5D4917_g = gv_CatGroup; 
            auto5F5D4917_p = 1;
            for ( ; auto5F5D4917_p <= PlayerGroupCount(auto5F5D4917_g) ; auto5F5D4917_p += BoolToInt(lv_PlayerIndex == PlayerGroupPlayer(auto5F5D4917_g, auto5F5D4917_p)) ) {
                lv_PlayerIndex = PlayerGroupPlayer(auto5F5D4917_g, auto5F5D4917_p);
                GameOver(lv_PlayerIndex, c_gameOverDefeat, true, true);
            }
            auto0C395880_g = gv_MiceGroup; 
            auto0C395880_p = 1;
            for ( ; auto0C395880_p <= PlayerGroupCount(auto0C395880_g) ; auto0C395880_p += BoolToInt(lv_PlayerIndex == PlayerGroupPlayer(auto0C395880_g, auto0C395880_p)) ) {
                lv_PlayerIndex = PlayerGroupPlayer(auto0C395880_g, auto0C395880_p);
                GameOver(lv_PlayerIndex, c_gameOverVictory, true, true);
            }
        }

    }
    else if (auto41F11478_val == "Probe") {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, (StringExternal("Param/Value/905C7266") + (PlayerName(lv_PlayerIndex) + (StringExternal("Param/Value/A9A58BAB") + (PlayerName(libNtve_gf_KillingPlayer()) + StringExternal("Param/Value/FAC3FCE6"))))));
        gv_PlayerStatus[lv_PlayerIndex] -= 1;
        gv_MouseNumber -= 1;
        if ((gv_PlayerStatus[lv_PlayerIndex] == 0)) {
            auto8E0C2289_g = UnitGroup(null, UnitGetOwner(EventUnit()), RegionEntireMap(), UnitFilter(0, 0, 0, 0), 0);
            auto8E0C2289_u = 1;
            for ( ; auto8E0C2289_u <= UnitGroupCount(auto8E0C2289_g, c_unitCountAll) ; auto8E0C2289_u += BoolToInt(lv_Unit == UnitGroupUnit(auto8E0C2289_g, auto8E0C2289_u)) ) {
                lv_Unit = UnitGroupUnit(auto8E0C2289_g, auto8E0C2289_u);
                UnitKill(lv_Unit);
            }
            UnitCreate(1, "SpacePrisonerBig", 0, UnitGetOwner(EventUnit()), PointFromId(14), 270.0);
            libNtve_gf_MakeUnitInvulnerable(UnitLastCreated(), true);
            libNtve_gf_MakeUnitUncommandable(UnitLastCreated(), true);
        }

        if ((gv_MouseNumber == 0)) {
            autoAFE175E3_g = gv_CatGroup; 
            autoAFE175E3_p = 1;
            for ( ; autoAFE175E3_p <= PlayerGroupCount(autoAFE175E3_g) ; autoAFE175E3_p += BoolToInt(lv_PlayerIndex == PlayerGroupPlayer(autoAFE175E3_g, autoAFE175E3_p)) ) {
                lv_PlayerIndex = PlayerGroupPlayer(autoAFE175E3_g, autoAFE175E3_p);
                GameOver(lv_PlayerIndex, c_gameOverVictory, true, true);
            }
            autoA2BD9324_g = gv_MiceGroup; 
            autoA2BD9324_p = 1;
            for ( ; autoA2BD9324_p <= PlayerGroupCount(autoA2BD9324_g) ; autoA2BD9324_p += BoolToInt(lv_PlayerIndex == PlayerGroupPlayer(autoA2BD9324_g, autoA2BD9324_p)) ) {
                lv_PlayerIndex = PlayerGroupPlayer(autoA2BD9324_g, autoA2BD9324_p);
                GameOver(lv_PlayerIndex, c_gameOverDefeat, true, true);
            }
        }

    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UnitKilled_Init () {
    gt_UnitKilled = TriggerCreate("gt_UnitKilled_Func");
    TriggerEnable(gt_UnitKilled, false);
    TriggerAddEventUnitDied(gt_UnitKilled, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Untitled Trigger 001
//--------------------------------------------------------------------------------------------------
bool gt_RescueMouse_Func (bool testConds, bool runActions) {
    unitgroup autoEB4F829C_g;
    int autoEB4F829C_u;
    playergroup autoA81C4504_g;
    int autoA81C4504_p;

    // Variable Declarations
    unit lv_Unit;
    int lv_Player;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnit()) == "Probe"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    autoEB4F829C_g = UnitGroup("SpacePrisonerBig", c_playerAny, RegionFromId(1), UnitFilter(0, 0, 0, 0), 0);
    autoEB4F829C_u = 1;
    for ( ; autoEB4F829C_u <= UnitGroupCount(autoEB4F829C_g, c_unitCountAll) ; autoEB4F829C_u += BoolToInt(lv_Unit == UnitGroupUnit(autoEB4F829C_g, autoEB4F829C_u)) ) {
        lv_Unit = UnitGroupUnit(autoEB4F829C_g, autoEB4F829C_u);
        UnitRemove(lv_Unit);
    }
    autoA81C4504_g = gv_MiceGroup; 
    autoA81C4504_p = 1;
    for ( ; autoA81C4504_p <= PlayerGroupCount(autoA81C4504_g) ; autoA81C4504_p += BoolToInt(lv_Player == PlayerGroupPlayer(autoA81C4504_g, autoA81C4504_p)) ) {
        lv_Player = PlayerGroupPlayer(autoA81C4504_g, autoA81C4504_p);
        if ((gv_PlayerStatus[lv_Player] <= 0)) {
            gv_PlayerStatus[lv_Player] = 1;
            gv_MouseNumber += 1;
            UnitCreate(1, "Probe", 0, lv_Player, PointFromId(14), 270.0);
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, (StringExternal("Param/Value/A186A2B9") + (PlayerName(lv_Player) + StringExternal("Param/Value/01B69CE6"))));
        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RescueMouse_Init () {
    gt_RescueMouse = TriggerCreate("gt_RescueMouse_Func");
    TriggerEnable(gt_RescueMouse, false);
    TriggerAddEventUnitRangePoint(gt_RescueMouse, null, PointFromId(14), 2.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Untitled Trigger 001
//--------------------------------------------------------------------------------------------------
bool gt_MouseBuilt_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_PlayerIndex;

    // Variable Initialization
    lv_PlayerIndex = UnitGetOwner(EventUnit());

    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnitCreatedUnit()) == "Probe"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_PlayerStatus[lv_PlayerIndex] += 1;
    gv_MouseNumber += 1;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MouseBuilt_Init () {
    gt_MouseBuilt = TriggerCreate("gt_MouseBuilt_Func");
    TriggerAddEventUnitCreated(gt_MouseBuilt, null, "NexusTrain", null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Untitled Trigger 006
//--------------------------------------------------------------------------------------------------
bool gt_CatBuilt_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_PlayerIndex;

    // Variable Initialization
    lv_PlayerIndex = UnitGetOwner(EventUnit());

    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnitCreatedUnit()) == "PrimalUltralisk"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_PlayerStatus[lv_PlayerIndex] += 1;
    gv_CatNumber += 1;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CatBuilt_Init () {
    gt_CatBuilt = TriggerCreate("gt_CatBuilt_Func");
    TriggerAddEventUnitCreated(gt_CatBuilt, null, "CatAdvanceUnits", null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Untitled Trigger 001
//--------------------------------------------------------------------------------------------------
bool gt_CatIncome_Func (bool testConds, bool runActions) {
    playergroup autoCAC2F2D0_g;
    int autoCAC2F2D0_p;

    // Variable Declarations
    int lv_Player;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    autoCAC2F2D0_g = gv_CatGroup; 
    autoCAC2F2D0_p = 1;
    for ( ; autoCAC2F2D0_p <= PlayerGroupCount(autoCAC2F2D0_g) ; autoCAC2F2D0_p += BoolToInt(lv_Player == PlayerGroupPlayer(autoCAC2F2D0_g, autoCAC2F2D0_p)) ) {
        lv_Player = PlayerGroupPlayer(autoCAC2F2D0_g, autoCAC2F2D0_p);
        PlayerModifyPropertyInt(lv_Player, c_playerPropMinerals, c_playerPropOperAdd, gv_Income);
    }
    gv_IncomeTime += 5;
    if ((gv_IncomeTime == 300)) {
        if ((gv_Income < 128)) {
            gv_Income *= 2;
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, (StringExternal("Param/Value/CCC7E167") + (IntToText(gv_Income) + StringExternal("Param/Value/F38D2DCE"))));
        }

        gv_IncomeTime = 0;
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CatIncome_Init () {
    gt_CatIncome = TriggerCreate("gt_CatIncome_Func");
    TriggerEnable(gt_CatIncome, false);
    TriggerAddEventTimePeriodic(gt_CatIncome, 5.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Untitled Trigger 001
//--------------------------------------------------------------------------------------------------
bool gt_SelectionChecking_Func (bool testConds, bool runActions) {
    unitgroup autoB527C696_g;
    int autoB527C696_u;
    playergroup auto002140B2_g;
    int auto002140B2_p;

    // Variable Declarations
    unit lv_Unit;
    int lv_Player;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, (StringExternal("Param/Value/607C6645") + (PlayerName(EventPlayer()) + StringExternal("Param/Value/A2E00647"))));
    if (((PlayerGroupCount(PlayerGroupActive()) >= 2) && (PlayerGroupCount(PlayerGroupActive()) <= 4))) {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringExternal("Param/Value/0D491709"));
        gv_CatNumber = 1;
    }
    else if (((PlayerGroupCount(PlayerGroupActive()) >= 5) && (PlayerGroupCount(PlayerGroupActive()) <= 8))) {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringExternal("Param/Value/2F1D7A76"));
        gv_CatNumber = 2;
    }

    autoB527C696_g = UnitGroup(null, EventPlayer(), RegionFromId(1), UnitFilter(0, 0, 0, 0), 0);
    autoB527C696_u = 1;
    for ( ; autoB527C696_u <= UnitGroupCount(autoB527C696_g, c_unitCountAll) ; autoB527C696_u += BoolToInt(lv_Unit == UnitGroupUnit(autoB527C696_g, autoB527C696_u)) ) {
        lv_Unit = UnitGroupUnit(autoB527C696_g, autoB527C696_u);
        UnitKill(lv_Unit);
    }

    if ((PlayerGroupHasPlayer(gv_CatGroup, EventPlayer()) == true)) {
        PlayerGroupRemove(gv_CatGroup, EventPlayer());
    }

    if ((PlayerGroupHasPlayer(gv_MiceGroup, EventPlayer()) == true)) {
        PlayerGroupRemove(gv_MiceGroup, EventPlayer());
    }

    if (((PlayerGroupCount(gv_CatGroup) + UnitGroupCount(gv_CivilianGroup, c_unitCountAlive)) < gv_CatNumber)) {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringExternal("Param/Value/8F75DDEF"));
        auto002140B2_g = PlayerGroupActive(); 
        auto002140B2_p = 1;
        for ( ; auto002140B2_p <= PlayerGroupCount(auto002140B2_g) ; auto002140B2_p += BoolToInt(lv_Player == PlayerGroupPlayer(auto002140B2_g, auto002140B2_p)) ) {
            lv_Player = PlayerGroupPlayer(auto002140B2_g, auto002140B2_p);
            GameOver(lv_Player, c_gameOverTie, true, true);
        }
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SelectionChecking_Init () {
    gt_SelectionChecking = TriggerCreate("gt_SelectionChecking_Func");
    TriggerAddEventPlayerLeft(gt_SelectionChecking, c_playerAny, c_gameResultUndecided);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Untitled Trigger 003
//--------------------------------------------------------------------------------------------------
bool gt_InGameChecking_Func (bool testConds, bool runActions) {
    unitgroup auto30CD3B2C_g;
    int auto30CD3B2C_u;
    playergroup auto535D15C2_g;
    int auto535D15C2_p;
    playergroup auto3C5A3603_g;
    int auto3C5A3603_p;
    playergroup auto6C68BCFD_g;
    int auto6C68BCFD_p;
    playergroup auto0B3F3ABE_g;
    int auto0B3F3ABE_p;

    // Variable Declarations
    int lv_Player;
    unit lv_Unit;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, (StringExternal("Param/Value/8DD71E7F") + (PlayerName(EventPlayer()) + StringExternal("Param/Value/28D4849B"))));
    auto30CD3B2C_g = UnitGroup(null, EventPlayer(), RegionFromId(1), UnitFilter(0, 0, 0, 0), 0);
    auto30CD3B2C_u = 1;
    for ( ; auto30CD3B2C_u <= UnitGroupCount(auto30CD3B2C_g, c_unitCountAll) ; auto30CD3B2C_u += BoolToInt(lv_Unit == UnitGroupUnit(auto30CD3B2C_g, auto30CD3B2C_u)) ) {
        lv_Unit = UnitGroupUnit(auto30CD3B2C_g, auto30CD3B2C_u);
        UnitKill(lv_Unit);
    }

    if ((PlayerGroupHasPlayer(gv_CatGroup, EventPlayer()) == true)) {
        PlayerGroupRemove(gv_CatGroup, EventPlayer());
        gv_CatNumber -= gv_PlayerStatus[EventPlayer()];
        gv_PlayerStatus[EventPlayer()] = 0;
        if ((gv_CatNumber == 0)) {
            auto535D15C2_g = gv_CatGroup; 
            auto535D15C2_p = 1;
            for ( ; auto535D15C2_p <= PlayerGroupCount(auto535D15C2_g) ; auto535D15C2_p += BoolToInt(lv_Player == PlayerGroupPlayer(auto535D15C2_g, auto535D15C2_p)) ) {
                lv_Player = PlayerGroupPlayer(auto535D15C2_g, auto535D15C2_p);
                GameOver(lv_Player, c_gameOverDefeat, true, true);
            }
            auto3C5A3603_g = gv_MiceGroup; 
            auto3C5A3603_p = 1;
            for ( ; auto3C5A3603_p <= PlayerGroupCount(auto3C5A3603_g) ; auto3C5A3603_p += BoolToInt(lv_Player == PlayerGroupPlayer(auto3C5A3603_g, auto3C5A3603_p)) ) {
                lv_Player = PlayerGroupPlayer(auto3C5A3603_g, auto3C5A3603_p);
                GameOver(lv_Player, c_gameOverVictory, true, true);
            }
        }

    }

    if ((PlayerGroupHasPlayer(gv_MiceGroup, EventPlayer()) == true)) {
        PlayerGroupRemove(gv_MiceGroup, EventPlayer());
        gv_MouseNumber -= gv_PlayerStatus[EventPlayer()];
        gv_PlayerStatus[EventPlayer()] = 0;
        if ((gv_MouseNumber == 0)) {
            auto6C68BCFD_g = gv_CatGroup; 
            auto6C68BCFD_p = 1;
            for ( ; auto6C68BCFD_p <= PlayerGroupCount(auto6C68BCFD_g) ; auto6C68BCFD_p += BoolToInt(lv_Player == PlayerGroupPlayer(auto6C68BCFD_g, auto6C68BCFD_p)) ) {
                lv_Player = PlayerGroupPlayer(auto6C68BCFD_g, auto6C68BCFD_p);
                GameOver(lv_Player, c_gameOverVictory, true, true);
            }
            auto0B3F3ABE_g = gv_MiceGroup; 
            auto0B3F3ABE_p = 1;
            for ( ; auto0B3F3ABE_p <= PlayerGroupCount(auto0B3F3ABE_g) ; auto0B3F3ABE_p += BoolToInt(lv_Player == PlayerGroupPlayer(auto0B3F3ABE_g, auto0B3F3ABE_p)) ) {
                lv_Player = PlayerGroupPlayer(auto0B3F3ABE_g, auto0B3F3ABE_p);
                GameOver(lv_Player, c_gameOverDefeat, true, true);
            }
        }

    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_InGameChecking_Init () {
    gt_InGameChecking = TriggerCreate("gt_InGameChecking_Func");
    TriggerEnable(gt_InGameChecking, false);
    TriggerAddEventPlayerLeft(gt_InGameChecking, c_playerAny, c_gameResultUndecided);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Untitled Trigger 001
//--------------------------------------------------------------------------------------------------
bool gt_WestToEast_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPosition(EventUnit(), PointFromId(1159043209), false);
    UnitIssueOrder(EventUnit(), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_WestToEast_Init () {
    gt_WestToEast = TriggerCreate("gt_WestToEast_Func");
    TriggerAddEventUnitRange(gt_WestToEast, null, UnitFromId(887494390), 2.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Untitled Trigger 002
//--------------------------------------------------------------------------------------------------
bool gt_EastToWest_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPosition(EventUnit(), PointFromId(293793475), false);
    UnitIssueOrder(EventUnit(), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_EastToWest_Init () {
    gt_EastToWest = TriggerCreate("gt_EastToWest_Func");
    TriggerAddEventUnitRange(gt_EastToWest, null, UnitFromId(1586133730), 2.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Untitled Trigger 004
//--------------------------------------------------------------------------------------------------
bool gt_NorthToSouth_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPosition(EventUnit(), PointFromId(117591079), false);
    UnitIssueOrder(EventUnit(), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_NorthToSouth_Init () {
    gt_NorthToSouth = TriggerCreate("gt_NorthToSouth_Func");
    TriggerAddEventUnitRange(gt_NorthToSouth, null, UnitFromId(585405274), 2.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Untitled Trigger 005
//--------------------------------------------------------------------------------------------------
bool gt_SouthToNorth_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPosition(EventUnit(), PointFromId(338758709), false);
    UnitIssueOrder(EventUnit(), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SouthToNorth_Init () {
    gt_SouthToNorth = TriggerCreate("gt_SouthToNorth_Func");
    TriggerAddEventUnitRange(gt_SouthToNorth, null, UnitFromId(681653940), 2.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger Initialization
//--------------------------------------------------------------------------------------------------
void InitTriggers () {
    gt_MapInitialization_Init();
    gt_SelectionTimer_Init();
    gt_PlayerChooseCat_Init();
    gt_PlayerChooseMouse_Init();
    gt_ReleaseCats_Init();
    gt_UnitKilled_Init();
    gt_RescueMouse_Init();
    gt_MouseBuilt_Init();
    gt_CatBuilt_Init();
    gt_CatIncome_Init();
    gt_SelectionChecking_Init();
    gt_InGameChecking_Init();
    gt_WestToEast_Init();
    gt_EastToWest_Init();
    gt_NorthToSouth_Init();
    gt_SouthToNorth_Init();
}

//--------------------------------------------------------------------------------------------------
// Map Initialization
//--------------------------------------------------------------------------------------------------
void InitMap () {
    InitLibs();
    InitGlobals();
    InitTriggers();
}
